<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>EA_anyGivenTenureTypeExists</name>
        <uuid>_a-0000dacd-14bd-8000-9ba2-011c48011c48_19855</uuid>
        <description>returns true if any of the given tenure types for the permit application exists otherwise false</description>
        <parentUuid>_a-0000d9e6-bfac-8000-9ba2-011c48011c48_1300</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>with(
local!tenureTypes: #&quot;_a-0000da39-53c8-8000-9ba2-011c48011c48_7674&quot;(#&quot;_a-0000da88-6c19-8000-9ba2-011c48011c48_13065&quot;(ri!permitApplicationId_int).permitTenureId).tenureType,
local!exists: intersection(local!tenureTypes,ri!tenureType_int),
if(count(local!exists)&gt;0,
true,
false
)
)</definition>
        <namedTypedValue>
            <name>permitApplicationId_int</name>
            <type>
                <name>int</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>tenureType_int</name>
            <type>
                <name>Integer?list</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
</contentHaul>
