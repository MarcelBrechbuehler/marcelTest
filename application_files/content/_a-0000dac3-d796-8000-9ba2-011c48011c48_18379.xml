<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>USR_duplicateUserRoleValidation</name>
        <uuid>_a-0000dac3-d796-8000-9ba2-011c48011c48_18379</uuid>
        <description></description>
        <parentUuid>_a-0000da88-6c19-8000-9ba2-011c48011c48_11467</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>with(
  local!activeUserRoleMapItems: #&quot;_a-0000da88-6c19-8000-9ba2-011c48011c48_12231&quot;(
    ri!userId,
    1
  ).roleName,
  local!inactiveUserRoleMapItems: #&quot;_a-0000da88-6c19-8000-9ba2-011c48011c48_12231&quot;(
    ri!userId,
    0
  ).roleName,
  if(
    contains(
      local!activeUserRoleMapItems,
      ri!roleName
    ),
    &quot;Selected user role already exists. Please select a different role.&quot;,
    if(
      contains(
        local!inactiveUserRoleMapItems,
        ri!roleName
      ),
      &quot;Selected user role already exists and is inactive. Please select a different role.&quot;,
      {}
    )
  )
)</definition>
        <namedTypedValue>
            <name>roleName</name>
            <type>
                <name>string</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
            <value/>
        </namedTypedValue>
        <namedTypedValue>
            <name>userId</name>
            <type>
                <name>int</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
</contentHaul>
