<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>COM_returnNewStartIndex</name>
        <uuid>_a-0000da88-6c19-8000-9ba2-011c48011c48_13130</uuid>
        <description>Returns a start index for the paging grid. This rule makes sure that the grid does not break when all the entries on the last page are deleted, resetting the view to the new last page of results.</description>
        <parentUuid>_a-0000da88-6c19-8000-9ba2-011c48011c48_11488</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>if(
  ri!pagingInfo.startIndex &lt;= ri!length,
  /* If at least as many items as the previous start index exist, use it `*/
  ri!pagingInfo.startIndex,
  /* Otherwise, create a new start index to avoid an error */
  if(
    ri!length&lt;=ri!pagingInfo.batchSize,
    /* If the last item in the grid was deleted or there are only enough items for one page, use 1 */
    1,
    /*` If there are multiple pages' worth remaining, adjust the start index so that the last page */
    /* of items is shown                                                                           */
    (ri!length+1)-ri!pagingInfo.batchSize
  )
)</definition>
        <namedTypedValue>
            <name>pagingInfo</name>
            <type>
                <name>Variant</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>length</name>
            <type>
                <name>int</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
</contentHaul>
