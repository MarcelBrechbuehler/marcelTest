<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>CUST_getPartyPhonenumberByPartyId</name>
        <uuid>_a-0000dac3-d796-8000-9ba2-011c48011c48_17766</uuid>
        <description>Returns the first party phone number for given party</description>
        <parentUuid>_a-0000d9e6-bfac-8000-9ba2-011c48011c48_1520</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>= with(
  local!phoneDetails: if(
    isnull(
      ri!partyId
    ),
    {},
    #&quot;35a7f3e9-26b4-435b-86d2-12a08f580c72&quot;(
      ri!partyId,
      #&quot;_a-0000da0f-2564-8000-9ba2-011c48011c48_4414&quot;
    )
  ),
  local!phoneNumbers: if(
    isnull(
      ri!partyId
    ),
    {},
    {
      apply(
        #&quot;_a-0000dada-365c-8000-9ba2-011c48011c48_24167&quot;,
        merge(
          local!phoneDetails.areaCode,
          local!phoneDetails.phoneNumber
        )
      )
    }
  ),
  if(
    local!phoneNumbers &gt; &quot;&quot;,
    if(
      count(
        local!phoneNumbers
      ) &gt; 1,
      local!phoneNumbers[1],
      local!phoneNumbers
    ),
    &quot;N/A&quot;
  )
)</definition>
        <namedTypedValue>
            <name>partyId</name>
            <type>
                <name>int</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
</contentHaul>
