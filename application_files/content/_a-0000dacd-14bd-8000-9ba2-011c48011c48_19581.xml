<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>CUST_concatenateAddressDetailsForLetters</name>
        <uuid>_a-0000dacd-14bd-8000-9ba2-011c48011c48_19581</uuid>
        <description></description>
        <parentUuid>_a-0000d9e6-bfac-8000-9ba2-011c48011c48_1199</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>= if(
  ri!partyAddressLink_cdt.partyAddress.overseasFlag = 0,
  {
    concat(
      if(
        isnull(
          index(
            ri!partyAddressLink_cdt.partyAddress,
            &quot;poBox&quot;,
            {}
          )
        ),
        {},
        {
          toHtml(
            index(
              ri!partyAddressLink_cdt.partyAddress,
              &quot;poBox&quot;,
              {}
            )
          ),
          &quot; &quot;
        }
      ),
      if(
        isnull(
          index(
            ri!partyAddressLink_cdt.partyAddress,
            &quot;property&quot;,
            {}
          )
        ),
        {},
        {
          toHtml(
            index(
              ri!partyAddressLink_cdt.partyAddress,
              &quot;property&quot;,
              {}
            )
          ),
          &quot; &quot;
        }
      ),
      if(
        isnull(
          index(
            ri!partyAddressLink_cdt.partyAddress,
            &quot;unitNo&quot;,
            {}
          )
        ),
        {},
        if(
          isnull(
            index(
              ri!partyAddressLink_cdt.partyAddress,
              &quot;streetNo&quot;,
              {}
            )
          ),
          {
            toHtml(
              index(
                ri!partyAddressLink_cdt.partyAddress,
                &quot;unitNo&quot;,
                {}
              )
            ),
            &quot; &quot;
          },
          {
            toHtml(
              index(
                ri!partyAddressLink_cdt.partyAddress,
                &quot;unitNo&quot;,
                {}
              )
            ),
            &quot;/&quot;
          }
        )
      ),
      if(
        isnull(
          index(
            ri!partyAddressLink_cdt.partyAddress,
            &quot;streetNo&quot;,
            {}
          )
        ),
        {},
        {
          toHtml(
            index(
              ri!partyAddressLink_cdt.partyAddress,
              &quot;streetNo&quot;,
              {}
            )
          ),
          &quot; &quot;
        }
      ),
      if(
        isnull(
          index(
            ri!partyAddressLink_cdt.partyAddress,
            &quot;streetName&quot;,
            {}
          )
        ),
        {},
        {
          toHtml(
            index(
              ri!partyAddressLink_cdt.partyAddress,
              &quot;streetName&quot;,
              {}
            )
          ),
          &quot; &quot;
        }
      ),
      if(
        isnull(
          index(
            ri!partyAddressLink_cdt.partyAddress,
            &quot;streetType&quot;,
            {}
          )
        ),
        tostring(
          &quot;&lt;w:br/&gt;&quot;
        ),
        {
          toHtml(
            #&quot;_a-0000da84-7836-8000-9ba2-011c48011c48_11165&quot;(
              index(
                ri!partyAddressLink_cdt.partyAddress,
                &quot;streetType&quot;,
                {}
              )
            )
          ),
          &quot;&lt;w:br/&gt;&quot;
        }
      ),
      if(
        isnull(
          index(
            ri!partyAddressLink_cdt.partyAddress,
            &quot;suburb&quot;,
            {}
          )
        ),
        {},
        {
          toHtml(
            index(
              ri!partyAddressLink_cdt.partyAddress,
              &quot;suburb&quot;,
              {}
            )
          ),
          &quot; &quot;
        }
      ),
      if(
        isnull(
          index(
            ri!partyAddressLink_cdt.partyAddress,
            &quot;state&quot;,
            {}
          )
        ),
        {},
        {
          toHtml(
            index(
              ri!partyAddressLink_cdt.partyAddress,
              &quot;state&quot;,
              {}
            )
          ),
          &quot; &quot;
        }
      ),
      if(
        isnull(
          index(
            ri!partyAddressLink_cdt.partyAddress,
            &quot;postCode&quot;,
            {}
          )
        ),
        &quot;&lt;w:br/&gt;&quot;,
        {
          toHtml(
            index(
              ri!partyAddressLink_cdt.partyAddress,
              &quot;postCode&quot;,
              {}
            )
          ),
          &quot;&lt;w:br/&gt;&quot;
        }
      )
    )
  },
  {
    concat(
      if(
        isnull(
          index(
            ri!partyAddressLink_cdt.partyAddress,
            &quot;addressLine1&quot;,
            {}
          )
        ),
        {},
        {
          toHtml(
            index(
              ri!partyAddressLink_cdt.partyAddress,
              &quot;addressLine1&quot;,
              {}
            )
          ),
          tostring(
            &quot;&lt;w:br/&gt;&quot;
          )
        }
      ),
      if(
        isnull(
          index(
            ri!partyAddressLink_cdt.partyAddress,
            &quot;addressLine2&quot;,
            {}
          )
        ),
        tostring(
          &quot;&lt;w:br/&gt;&quot;
        ),
        {
          toHtml(
            index(
              ri!partyAddressLink_cdt.partyAddress,
              &quot;addressLine2&quot;,
              {}
            )
          ),
          tostring(
            &quot;&lt;w:br/&gt;&quot;
          )
        }
      ),
      if(
        isnull(
          index(
            ri!partyAddressLink_cdt.partyAddress,
            &quot;addressLine3&quot;,
            {}
          )
        ),
        tostring(
          &quot;&lt;w:br/&gt;&quot;
        ),
        {
          toHtml(
            index(
              ri!partyAddressLink_cdt.partyAddress,
              &quot;addressLine3&quot;,
              {}
            )
          ),
          tostring(
            &quot;&lt;w:br/&gt;&quot;
          )
        }
      ),
      if(
        isnull(
          index(
            ri!partyAddressLink_cdt.partyAddress,
            &quot;country&quot;,
            {}
          )
        ),
        {},
        {
          toHtml(
            index(
              #&quot;_a-0000da0f-2564-8000-9ba2-011c48011c48_5819&quot;,
              lookup(
                #&quot;_a-0000da0f-2564-8000-9ba2-011c48011c48_5816&quot;,
                index(
                  ri!partyAddressLink_cdt.partyAddress,
                  &quot;country&quot;,
                  {}
                )
              )
            )
          )
        }
      )
    )
  }
)</definition>
        <namedTypedValue>
            <name>partyAddressLink_cdt</name>
            <type>
                <name>Variant</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
</contentHaul>
